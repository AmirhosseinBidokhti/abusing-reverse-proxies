server {

	location /api/v0/ {
	    rewrite ^ $uri;
	    rewrite ^/api/v0/(.*) $1 break;
	    proxy_set_header   X-Real-IP        $remote_addr;
	    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	    proxy_set_header   Host             $host;
		
	    proxy_pass http://backend/api/v0/$1;
	    #return 404; # Catch-all
	}

	location /api/v1/ {
	    rewrite ^ $request_uri;
	    rewrite ^/api/v1/(.*) $1 break;
	    proxy_set_header   X-Real-IP        $remote_addr;
	    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	    proxy_set_header   Host             $host;

	    proxy_pass http://backend/api/v1/$1;
	    #return 404; # Catch-all
	}

	location ~ /api/v2/(.*)$ {
	    proxy_set_header   X-Real-IP        $remote_addr;
	    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	    proxy_set_header   Host             $host;

	    proxy_pass http://backend/api/v3/$1;
	    #return 404; # Catch-all
	}


  	location /api/v4/ {
	    # will be concated 
	    # (e.g. user-client -> /api/v4/test%23%2f%26 -> /api/v4/devtest%23/&)
            proxy_pass http://backend/api/v4/dev;
        }


      location /api/v5/ {
            proxy_pass http://backend/api/v5/;
        }



	location /admin {
	    deny all;
	}
}

upstream backend {
     zone users_service 64k;
     server host.docker.internal:2000;
}

